using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Drawing.Printing;
using Excel = Microsoft.Office.Interop.Excel;

namespace Logiciel_de_Paiement
{
    public partial class Form8 : Form
    {
        private DataTable dtTbleForm5;
        public Form8()
        {
            InitializeComponent();
            this.WindowState = FormWindowState.Maximized;
        }

        public Form8(DataTable table) : this()
        {
            this.dtTbleForm5 = table;
        }

        SqlConnection conn = new SqlConnection("Data Source=DESKTOP-RQ9PT5M;Initial Catalog=LogicielDePaiement;Integrated Security=True");
        DataTable dt = new DataTable();
        SqlDataReader dr;
        private void pictureBox2_Click(object sender, EventArgs e)
        {
            Form2 f2 = new Form2();
            f2.Show();
            this.Hide();
        }


        private void show()
        {
            SqlCommand cmd = new SqlCommand("select * from Detaile", conn);
            conn.Open();
            dr = cmd.ExecuteReader();

            if (dt.Rows.Count == 0)
                dt.Load(dr);

            dataGridView1.DataSource = dt;
            dr.Close();
            SqlCommand cmdetu = new SqlCommand("select * from Detaile", conn);
            SqlDataReader drr = cmdetu.ExecuteReader();
            //Méthode CalculeMoi
            for (int i = 0; i < dataGridView1.Rows.Count; i++)
            {
           
                int matricule = (int)dataGridView1.Rows[i].Cells[0].Value;
                for(int j = 0; j < dtTbleForm5.Rows.Count; ++j)
                {
                    string dtInt = dtTbleForm5.Rows[j][8].ToString();

                }
            }
            conn.Close();
        }

        private void Form8_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'logicielDePaiementDataSet3.Detaile' table. You can move, or remove it, as needed.
            this.detaileTableAdapter.Fill(this.logicielDePaiementDataSet3.Detaile);
            show();
            printDocument1.DefaultPageSettings.PaperSize = new PaperSize("Mypaper", this.Height - 155, this.Width);
            printDocument1.DefaultPageSettings.Landscape = true;

        }
        private void button1_Click(object sender, EventArgs e)
        {
            ((Form)printPreviewDialog1).WindowState = FormWindowState.Maximized;
            indexRows = 0;
            printPreviewDialog1.ShowDialog();

        }

        private void dataGridView1_CellFormatting(object sender, DataGridViewCellFormattingEventArgs e)
        {
        }
        private int indexRows = 0;
       
        private void printDocument1_PrintPage(object sender, System.Drawing.Printing.PrintPageEventArgs e)
        {
            //Bitmap btm = new Bitmap(this.dataGridView1.Width, this.dataGridView1.Height);
            //dataGridView1.DrawToBitmap(btm, new Rectangle(0, 0, this.dataGridView1.Width, this.dataGridView1.Height));
            //for (int line = 0; line < dataGridView1.Rows.Count; line++)
            //    e.Graphics.DrawString("Liste de Détaile etudiant", new Font("Century Gothic", 22, FontStyle.Bold), Brushes.Red, new Point(600, 2));
            //e.Graphics.DrawImage(btm, -40, 40);
            e.Graphics.DrawRectangle(Pens.Black,20,20,e.PageBounds.Width-36,e.PageBounds.Height-40);
            float colHeight = 60;
            Font f = new Font("verdana", 9);
            Font fnb = new Font("verdana", 7);

            float colWidth = 87 + 100;

            string[] colNames = { "Matricule", "Total_", "Solde_", "éch_"};
            e.Graphics.DrawString("Matricule", f, Brushes.Red, 24, 33);
            e.Graphics.DrawLine(Pens.Black,20,colHeight,e.PageBounds.Width-16,colHeight);
            e.Graphics.DrawLine(Pens.Black, 100, 20, 100, e.PageBounds.Height - 20);
            int j = 0;
            string[] txtRy = { "Fr", "Sc", "Tr", "Ps1", "Ps2", "Ps3" };
            for(int i = 1; i < 19; i++)
            {
                if (i % 3 == 0)
                {
                    string txt = "NB_"+txtRy[j];
                    float strWidth = (colWidth - 50 + txt.Length) - 40;

                    if (i > 9)
                    {
                        strWidth = (colWidth - 50 + txt.Length) - 43;
                    }
                    e.Graphics.DrawString(txt, fnb, Brushes.Red, strWidth, 33);

                    e.Graphics.DrawLine(Pens.Black, colWidth-50 , 20, colWidth-50 , e.PageBounds.Height - 20);
                    colWidth = colWidth+37 ;
                    j++;

                }
                else
                {
                    string txt = "Solde_";

                    if ((i - 1) % 3 == 0)
                    {
                        txt = "Total_";
                    }
                    
                    float strWidth = (colWidth + txt.Length)-(175/2);
                    e.Graphics.DrawString(txt+txtRy[j], f, Brushes.Red, strWidth , 33);
                    e.Graphics.DrawLine(Pens.Black, colWidth, 20, colWidth, e.PageBounds.Height - 20);
                    colWidth = colWidth + 87;
                }
            }

           
            for (; indexRows < dataGridView1.Rows.Count - 1; indexRows++)
            {
                colHeight =colHeight+30 >=e.PageBounds.Height-20?e.PageBounds.Height-20:colHeight+30;

                e.Graphics.DrawString(dataGridView1.Rows[indexRows].Cells[colNames[0]].Value.ToString()
                    , f, Brushes.Red, 24, colHeight-30);
                e.Graphics.DrawLine(Pens.Black, 20, colHeight, e.PageBounds.Width - 16, colHeight);
                j = 0;
                colWidth = 87 + 100;
                for (int k = 1; k < 19; k++)
                {
                    if (k % 3 == 0)
                    {
                        string txt = colNames[3] + txtRy[j] + "_Np";
                        string col = "NB_" + txtRy[j];
                        float strWidth = (colWidth - 50 +col.Length) - 30;
                        e.Graphics.DrawString(dataGridView1.Rows[indexRows].Cells[txt].Value.ToString()
                            , f, Brushes.Black, strWidth, colHeight - 23);
                        j++;
                        colWidth = colWidth + 37;

                    }
                    else
                    {
                        string txt = "Solde_";
                        string colN = colNames[2] + txtRy[j];
                        if ((k - 1) % 3 == 0)
                        {
                            txt = "Total_";
                            colN = colNames[1] + txtRy[j];
                        }
                        float strWidth = (colWidth + txt.Length) - (175 / 2);
                        e.Graphics.DrawString(dataGridView1.Rows[indexRows].Cells[colN].Value.ToString(),
                            f, Brushes.Black, strWidth, colHeight - 23);
                        colWidth = colWidth + 87;
                    }
                }

                if (colHeight >= e.PageBounds.Height - 20)
                {
                    e.HasMorePages = true;
                    break;
                }

            }

            
        }

        private void dataGridView1_FilterStringChanged(object sender, Zuby.ADGV.AdvancedDataGridView.FilterEventArgs e)
        {
            dt.DefaultView.RowFilter = dataGridView1.FilterString;
            dataGridView1.DataSource = dt;
        }

        private void dataGridView1_SortStringChanged(object sender, Zuby.ADGV.AdvancedDataGridView.SortEventArgs e)
        {
            dt.DefaultView.Sort = dataGridView1.SortString;
            dataGridView1.DataSource = dt;
        }

        private void informationEtudiantToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Form5 f5 = new Form5();
            f5.Show();
            this.Hide();
        }

        private void button4_Click(object sender, EventArgs e)
        {
            if (dataGridView1.Rows.Count > 0)
            {
                Excel.Application ExcelADD = new Excel.Application();
                ExcelADD.Application.Workbooks.Add(Type.Missing);
                for (int i = 1; i < dataGridView1.Columns.Count + 1; i++)
                {
                    ExcelADD.Cells[1, i] = dataGridView1.Columns[i - 1].HeaderText;
                }
                for (int i = 0; i < dataGridView1.Rows.Count; i++)
                {
                    for (int j = 0; j < dataGridView1.Columns.Count; j++)
                    {
                        ExcelADD.Cells[i + 2, j + 1] = dataGridView1.Rows[i].Cells[j].Value.ToString();
                    }
                }
                ExcelADD.Columns.AutoFit();
                ExcelADD.Visible = true;
            }
        }

        private void dataGridView1_CellFormatting_1(object sender, DataGridViewCellFormattingEventArgs e)
        {
            //if (e.ColumnIndex == 1 || e.ColumnIndex == 3 || e.ColumnIndex == 4 || e.ColumnIndex == 5 ||
            //   e.ColumnIndex == 7 || e.ColumnIndex == 9 || e.ColumnIndex == 10 || e.ColumnIndex == 11 ||
            //   e.ColumnIndex == 13 || e.ColumnIndex == 15 || e.ColumnIndex == 16 || e.ColumnIndex == 17 ||
            //   e.ColumnIndex == 19 || e.ColumnIndex == 21 || e.ColumnIndex == 22 || e.ColumnIndex == 23 ||
            //   e.ColumnIndex == 25 || e.ColumnIndex == 27 || e.ColumnIndex == 28 || e.ColumnIndex == 29 ||
            //   e.ColumnIndex == 31 || e.ColumnIndex == 33 || e.ColumnIndex == 34 || e.ColumnIndex == 35)
            //{
            //    if (e.Value != null)
            //    {
            //        try
            //        {
            //            string temp = e.Value.ToString().Replace(",", ".");
            //            temp = temp.Remove(temp.Length - 2, 2);
            //            e.Value = temp;
            //        }
            //        catch (Exception ex)
            //        {

            //        }
            //    }
            //}
        }
    }
}
